name: Check Release

permissions:
  contents: write
on:
  workflow_dispatch:
  schedule:
    - cron: '0 * * * *'  # runs every hour

jobs:
  check-release:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        ref: 'releases-check'  # This is a branch that stores the latest release state

    - name: Install jq
      run: sudo apt-get install jq

    - name: Check for new release
      id: check
      run: |
        curl -H "Accept: application/vnd.github.v3+json" https://api.github.com/repos/wasmerio/wasmer/releases/latest > latest_release.json
        echo "::set-output name=tag::$(jq -r '.tag_name' latest_release.json)"
      shell: bash

    - name: Compare releases
      id: compare
      run: |
        if [ ! -f previous_release.json ]; then
          echo "No previous release info found. Initializing..."
          cp latest_release.json previous_release.json
        fi
        PREVIOUS_RELEASE_TAG=$(jq -r '.tag_name' previous_release.json)
        CURRENT_RELEASE_TAG=$(jq -r '.tag_name' latest_release.json)
        if [ "$PREVIOUS_RELEASE_TAG" != "$CURRENT_RELEASE_TAG" ]; then
          echo "::set-output name=new_release::true"
          cp latest_release.json previous_release.json
        else
          echo "::set-output name=new_release::true"
        fi
      shell: bash

    - name: Checkout remote repository
      if: steps.compare.outputs.new_release == 'true'
      uses: actions/checkout@v2
      with:
        repository: wasmerio/wasmer
        ref: ${{ steps.check.outputs.tag }}
        path: wasmer-sources

    - name: Install Rust and Build Crate
      if: steps.compare.outputs.new_release == 'true'
      run: |
        curl https://sh.rustup.rs -sSf | sh -s -- -y
        source $HOME/.cargo/env
        cargo install <crate>
        cd wasmer-sources
        make package-capi
        ls -a packages

#     - name: Create Release
#       id: create_release
#       uses: actions/create-release@v1
#       if: steps.compare.outputs.new_release == 'true'
#       env:
#         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#       with:
#         tag_name: ${{ steps.check.outputs.tag }}
#         release_name: Release ${{ steps.check.outputs.tag }}
#         draft: false
#         prerelease: false

#     - name: Upload Release Asset
#       uses: actions/upload-release-asset@v1
#       if: steps.compare.outputs.new_release == 'true'
#       env:
#         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#       with:
#         upload_url: ${{ steps.create_release.outputs.upload_url }}
#         asset_path: ./target/release/<files>
#         asset_name: wasmer-sources/*.h
#         asset_content_type: application/octet-stream

#     - name: Commit changes
#       run: |
#         git config --local user.email "action@github.com"
#         git config --local user.name "GitHub Action"
#         git add .
#         git commit -am "Update release info"
#         git push
#       shell: bash
